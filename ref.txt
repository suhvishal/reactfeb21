
JavaScript 
    - it is scripting language for web programming 
    - executes only inside browser                  (note: after 2008, using nodejs we can execute js code outside browser also)
        - every browser has 'javascript engine' which is resposible to execute js code 
        -       google chrome  = v8
                firefox = spider monkey 
                IE = chakra
                ...
                ...
    - 1997, introduced 
    - 1997, it was submitted to ECMA for standardization 
    - since then ECMA, keeps publishing diff specifications, and every browser is supposed to implement those specifications
    - the implemetation of these specifications is called 'ECMAScript'

    - 1997  = ES1
    - 1998  = ES2
    - 1999  = ES3
    - 2009  = ES5 --- stable 

    - 2015  = ES6 - which introduced a lot of new features 

    - ES6 = specification published by ECMA 
            (till today not all the browsers have implemented completely except Chrome)

    - ES6 - modern javascript - features 

            - module system 
            - arrow functions 
            - let, const keywords 
            - object destructuring 
            - spread operators, rest parameters 
            - promises, async, await 

    - Tools 
        - transpilers
            - ex. Babel 
            - convert the modern js code into legacy code 

        - bundlers
            - bundle several files together in a single file and compressing 
            - ex. webpack 

        - package managers
            - npm - node package manager 
            - it is used for dependency management  

        - build tools 

        - ...



React library 
    - it is a javascript library for building User interface for web-applications 
    - React library helps to create 'Components'

React DOM library 
    - it is used to render the component in browser DOM 

     ReactDOM.render(<Product />, document.getElementById('root'))

Component 
    - it is a main building block of react applications 
    - a component represents a specific part/patch on the screen 
    - a component encapsulates the data, logic and view together 

    - a component in react is just a javascript function or a class, which describe the UI

                import React from 'react';

                function Product(){                         //stateless component 
                    return (
                        <div class='prod'>
                            <h1>Samsung S9+</h1>
                            <p>This is some description of Samsung</p>
                            <p>Offer : XXXXXXX</p>
                            <p>Price : XXXX </p>
                            <button>Buy Now!</button>
                        </div>
                    )
                }




                import React, {Component} from 'react'      /stateful component       
                class Product extends Component  {

                }

JSX 
    - javascript xml, it is syntactical sugar for html 
    - it looks like html
    - it is used to describe the UI 
    - jsx code is converted to javascript 

            <div className="xyz"> helloworld </div>                 //jsx code 

            React.createElement('div', {className : 'xyz'}, 'helloworld')      //javascript code 

babel 
    - converts the jsx code into its equivalent javascript code 


    language                library /packages                    framework 
   
    JAVA                    standard library                     spring 
                                +
                            3rd party libraries 

    C#, VB                    ......                              .net framework


    PYTHON                  .....                               django, flask 


    JAVASCRIPT               jquery, bootstrap,semanticui        angular, vuejs, emberjs        
                                   react,
        |                               |                               |
        |                               |                               |
    provide programming         simplifies the tasks               standardize the process
    capabilities 


    JavaScript - ES5 - ECMAScript 

    ES6 - 2015 - ECMAScript 2015 - modern javascript 
            - introducted new features 


    ReactJS - React - REact.JS
        - a javascript library for building ui for web/mobile 

   

    ReactNative 
        - it is built on top of React 
        - it is used for mobile apps - android as well as ios 


dependency management tools 
    - npm 
    - yarn 
    - bower 
    - .....


development environment for react 
    1. download & install NodeJs
            - NPM - node package manager 
                - it is installed automatically along with nodejs 
                - it is dependency management tool

    2. VS Code editor 
            - any other editor i.e. atom, brackets, nodepad++,              

    3. install 'create-react-app' CLI tool 

                 > npm install -g create-react-app 

    4. download / install 'react developer tool' for google chrome 
        - it will help in debugging 

    5. install below extensions in VS Code 
            - prettier 
            - auto import ES6, JSX 
            - reactjs code snippets 




        create a react-project 
        -------------------------
            - use 'create-react-app' ClI tool 

            > create-react-app   myapp1
                - create the directory structure 
                - download required libraries -- react, react-dom, etc.
                - download required tools -- babel, webpack, webpack-dev-server 

                   

    Directory structure of react project 

        |
        |->node_modules 
        |   |->stores all the libraries/packages that we download using npm 
        |
        |->public
        |   |->stores the public files i.e. index.html
        |
        |->src 
        |   |->store all the code that we write 
        |   |->index.js -->entry point of react application
        |   |   - index.js file renders the top level / root component created in App.js
        |   |->app.js
        |   |->index.css




Component 
-------------
    - a component represents a particular patch on the screen 
    - a component encapsulates the view, data and logic together 
    - a component in react is just a javacript function or a class 
        that describes the UI 
    - in react, we can use JSX to describe the UI 
        
        
        1. stateless component / function component 

                - presentational purpose 
                - don't have sate in functional component 

                -** after v 16.3, using the concept of 'hooks' we can also have state in function component 

                import React from 'react';

                function Product(){
                        return (
                            //jsx code 
                            <div>
                                <p>This is product</p>
                            </div>
                        );
                }

                <Product />


        2. stateful component / class based component 

                - it has a special property called 'state' 
                - a class based component can have state where we can store some data/information 
                        which eventually change 
                --the state eventually change, and if the state changes - the component is re-rendered 

                -- a class based component has life cycle methods 

                import React, {Component} from 'react';

                class ProductList extends Component {

                        state = {

                        }

                        render(){
                            return (
                                //jsx code
                            )
                        }

                }


    JSX
        - Javasript xml which looks very similar to html 
        - jsx code is converted to its equivalent javascript code 

            <div> helloworld </div>         //jsx code 

            React.createElement('div', null, 'helloworld' )





                    App 
                    |
        -----------------------------------------
        Header              Navbar              ProductList 
                                                    |
                                    ---------------------------------
                                    Product     Product     Product



        props 


        state 
            - a state is a javascript object, that represents some data within the component 
            - whenever the state changes, the component is re-rendered 
            - using 'setState()' method we can update the state 


                window 
                    |
    ---------------------------------------------------
    history         location            document        ....
                                            |
                                            |
                                        htmlElement 
                                            |
                            --------------------------------
                            body                        head





    javascript function 
    --------------------------
        - the functions are 1st class objects 
        - in js functions can be...
            - stored as value in a varialbe 
            - passed as an argument to a function -i.e. callback 
            - can returned from a function 



    Array manipulation methods / functions
    -----------------------------------------

    1. forEach(callback) function 
            - forEach() has a callback as argument which executes for each element in the array 
            - forEech() is used to iterate over each element in the array 

            const namesArr = ['Vishal','Abhishek','Vaibhab','Pooja']

            namesArr.forEach(function(item, index){
                console.log(index, item)
            })

            namesArr.forEach((item, index) => console.log(index, item))

    2. map(callback) fuction 

        - the callback is executed for each element in the array, 
        - the map() returns a new array containing the value returned by the callback function 
        - used to return a new array containing the processed elements 

         const namesArr = ['Vishal','Abhishek','Vaibhab','Pooja']

         const newArr = namesArr.map((name)=>{
             return name.toUpperCase()
         })


    3. filter(callback) function 

            - executes the callback for each element in the array 
            - filter() returns a new array containing only the elements for which the callback returns true 

             const namesArr = ['Vishal','Abhishek','Vaibhav', 'rita', 'sita', Pooja']


            const newArr = namesArr.filter((item)=>{
                                if(item.length() >= 5)
                                    return true;
                            })

           const newArr = namesArr.filter( item => item.length() >= 5)

    4. find() function 

    5. findIndex() function 

    6. sort() 

    7. push() 

    8. pop() 

    9. shift() 

    10. unshift()




    Object destructuring assignment 
    ------------------------------------
        const person = {
            fname : 'vishal', 
            lname : 'shah',
            location : 'pune', 
            age : 37,
            email : 'vishal@gmail.com',
            mobile : '993993939393'
            //....
        }

        let fname = person.fname
        let lname = person.lname
        let age = person.age

        let { fname:fn, lname, age } = person;


    Array destructuring assignment 

        const arr = [10,21,43,45,65, 89,56,3,87]

        let a = arr[0]
        let b = arr[1]
        let c = arr[2]
        let d =  ...
        let e = 

        let [a,b,c,d,e] = arr;




